@using LMS.Extentions
@model LMS.Models.ViewModels.CourseUnitViewModel
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-info">Create Course Unit</h2>
<br />
<div class="border backgroundWhite row">
 
 
    <div class="col-9 border-right">

        <h4 class="text-black-50">Course: @Model.Course.Name</h4>
        <br />
        <form method="post" asp-action="Create">

            <!--To Controller-->
            <input type="hidden" asp-for="@Model.Course.Id" />
            <input type="hidden" asp-for="@Model.Course.Name" />

            <!--To Jquery-->
            <input type="hidden" value="@Model.Course.Id" id="courseId" name="courseId" />

            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group row">

                <div class="col-2">
                    <label asp-for="CourseUnitAssignment.CourseModule" class="col-form-label"></label>
                </div>

                <div class="col-4">

                    <select id="ddlModuleList" asp-for="CourseUnitAssignment.CourseModuleId" asp-items="@(new SelectList(Model.CourseModuleList,"Id","Title"))" class="form-control"><option>Please select one</option></select>
                </div>

            </div>
            <div class="form-group row">

                <div class="col-2">
                    <label asp-for="@Model.CourseUnit.Name" class="col-form-label"></label>
                </div>

                <div class="col-7">

                    <input asp-for="@Model.CourseUnit.Name" class="form-control" />

                </div>
                <span asp-validation-for="@Model.CourseUnit.Name" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-2">
                    <label asp-for="@Model.CourseUnit.Reference" class="col-form-label"></label>
                </div>
                <div class="col-3">
                    <input asp-for="@Model.CourseUnit.Reference" class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label asp-for="@Model.CourseUnit.Level" class="col-form-label"></label>
                </div>
                <div class="col-2">
                    <input asp-for="@Model.CourseUnit.Level" class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-2">
                    <label asp-for="@Model.CourseUnit.Credits" class="col-form-label"></label>
                </div>
                <div class="col-2">
                    <input asp-for="@Model.CourseUnit.Credits" class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-5 offset-3">
                    <partial name="_CreateAndBackToListButton" />
                </div>
            </div>

        </form>

    </div>

    <div class="col-3">
        @if (Model.CourseModuleList.Count() > 0)
        {<p>Existing Units in Module: </p>

            <div id="ModuleList">

                <ul class="list-group"></ul>

            </div>

        }

    </div>


</div>

@section Scripts{

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>

        function updateUnitList() {

            //Gets the value of the selected item using the select ID
            var moduleSelected = document.getElementById("ddlModuleList").value;

            $list = $('#ModuleList');

            $.ajax({
                url: '/Course/CourseUnit/GetCourseUnits/' + moduleSelected,
                type: 'GET',
                dataType: 'text',
                success: function (data) {

                    results = JSON.parse(data);
                    $list.html('');

                    $list.append(' <ul class="list-group"> ')
                    for (i in results) {
                      if (results[i].text.length > 25) {
                        $list.append('<li class="list-group-item">' +  results[i].text.substring(0, 25) + "...");
                        } else {
                       $list.append('<li class="list-group-item">' + results[i].text + '</li>')
                            }
                    }
                    $list.append('</ul>');
                }

            });
        }

        //Now we call the above function on the following two occations (on change, document ready)

        $(document).ready(function () {

            updateUnitList();

        });

        $("#ddlModuleList").on("change", function () {

            updateUnitList();

        });


    </script>



}
